# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: grpc/engines.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import stable_diffusion_krita.engines_pb2


class EnginesServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListEngines(self, stream: 'grpclib.server.Stream[grpc.engines_pb2.ListEnginesRequest, grpc.engines_pb2.Engines]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/gooseai.EnginesService/ListEngines': grpclib.const.Handler(
                self.ListEngines,
                grpclib.const.Cardinality.UNARY_UNARY,
                stable_diffusion_krita.engines_pb2.ListEnginesRequest,
                stable_diffusion_krita.engines_pb2.Engines,
            ),
        }


class EnginesServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListEngines = grpclib.client.UnaryUnaryMethod(
            channel,
            '/gooseai.EnginesService/ListEngines',
            stable_diffusion_krita.engines_pb2.ListEnginesRequest,
            stable_diffusion_krita.engines_pb2.Engines,
        )
